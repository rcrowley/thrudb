AC_PREREQ(2.59)

AC_INIT(thrudb, 0.1)

AM_INIT_AUTOMAKE

AC_PREFIX_DEFAULT(/usr/local/thrudb)


# Checks for programs.
AC_PROG_CXX
AC_PROG_CC

AC_PROG_INSTALL

AC_PATH_PROG(THRIFT, thrift, thrift, $PATH:/usr/local/bin:/usr/bin)
AC_LANG(C++)

#AC_CHECK_LIB(thriftnb, [exit], [], 
#	AC_MSG_ERROR([You must install thrift; please install libraries and development files with libevent support])
#)


#CLucene
AC_CHECK_LIB(clucene, [open], [], 
	AC_MSG_ERROR([You must install clucene; please install libraries and development files])
)

AC_CHECK_HEADERS([CLucene.h],,
	AC_MSG_ERROR([CLucene.h missing; please add clucene development files])
)


#libmemcached
AC_CHECK_LIB(memcached, [open], [], 
	AC_MSG_ERROR([You must install libmemcached; please install libraries and development files])
)

AC_CHECK_HEADERS([libmemcached/memcached.h],,
	AC_MSG_ERROR([memcached.h missing; please add libmemecached development files])
)


#log4cxx
AC_CHECK_LIB(log4cxx, [open], [], 
	AC_MSG_ERROR([You must install log4cxx; please install libraries and development files])
)

AC_CHECK_HEADERS([log4cxx/logger.h],,
	AC_MSG_ERROR([log4cxx/logger.h missing; please add log4cxx development files])
)

#libuuid
AC_CHECK_LIB(uuid, [open], [], 
	AC_MSG_ERROR([You must install uuid; please install libraries and development files])
)

AC_CHECK_HEADERS([uuid/uuid.h],,
	AC_MSG_ERROR([uuid.h missing; please add uuid development files])
)

################################################################
## Crypto
###
AC_CHECK_LIB([ssl],[ssl3_new],,
	AC_MSG_ERROR([OpenSSL developer library 'libssl' not installed; cannot continue.]))
AC_CHECK_LIB([crypto],[MD5_Update],,
	AC_MSG_ERROR([OpenSSL developer library 'libcrypto' not installed; cannot continue.]))	

AC_CHECK_HEADERS([openssl/rand.h])
AC_CHECK_HEADERS([openssl/md5.h])
AC_CHECK_HEADERS([openssl/sha.h])
AC_CHECK_HEADERS([openssl/hmac.h])
AC_CHECK_HEADERS([openssl/fips_sha.h])
AC_CHECK_HEADERS([openssl/aes.h])
AC_CHECK_FUNCS([SHA256_Init])
AC_CHECK_FUNCS([AES_encrypt])
AC_CHECK_FUNCS([RAND_pseudo_bytes])


################################################################
## Amazon S3
## S3 requires curl and expat; otherwise we don't need them
AC_MSG_NOTICE([S3 support enabled. Looking for curl and expat...])
AC_PATH_PROG(CURL_CONFIG,curl-config)
AC_ARG_WITH(curl,
            AC_HELP_STRING([--with-curl=PATH], [where libcurl is installed]),
            [CURL_CONFIG="${with_curl}/bin/curl-config"])
if test -f "${CURL_CONFIG}"; then
      LDFLAGS="`${CURL_CONFIG} --libs` $LDFLAGS"
      CPPFLAGS="`${CURL_CONFIG} --cflags` $CPPFLAGS"
else
      AC_MSG_WARN([curl-config not found])
      exit -1
fi

  AC_CHECK_HEADER([curl/curl.h],,
    AC_MSG_WARN([curl/curl.h not found])
    exit -1)
  AC_CHECK_LIB([curl],[curl_global_init],,
    AC_MSG_WARN([Curl library corrupt])
    exit -1)
  AC_CHECK_HEADER([expat.h])
  AC_CHECK_LIB([expat],[XML_ParserCreate],, 
    AC_MSG_WARN([expat.h not found])
    exit -1)


#AC_SUBST(S3_BIN)

AC_OUTPUT(Makefile)

